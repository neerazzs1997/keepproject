{"version":3,"sources":["CreateTask.jsx","EditTask.jsx","CreateList.jsx","TodoTask.jsx","App.jsx","index.js"],"names":["CreateTask","modal","toggle","save","useState","Task","setTask","Description","setDescription","Status","setStatus","Date","setDate","Deadline","setDeadline","ChangeHandler","event","target","name","value","isOpen","action","className","htmlFor","type","onChange","id","cols","rows","color","onClick","object","EditTask","TaskObj","upDateTask","ChangeHandlers","useEffect","e","preventDefault","tempobj","CreateList","index","TaskDelete","updateListArray","setmodal","obj","TodoTask","TaskList","setTaskList","arr","localStorage","getItem","JSON","parse","tempfile","splice","setItem","stringify","window","location","reload","updateListArrays","templist","map","push","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c9b4ad0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport { Modal, ModalFooter, ModalBody, ModalHeader, Button } from 'reactstrap';\r\n\r\nconst CreateTask = ({ modal, toggle,save}) => {\r\n    const [Task, setTask] = useState(\"\")\r\n    const [Description, setDescription] = useState(\"\")\r\n    const [Status, setStatus] = useState(\"\")\r\n    const [Date, setDate] = useState(\"\")\r\n    const [Deadline, setDeadline] = useState(\"\")\r\n\r\n    const ChangeHandler = (event) => {\r\n        const { name, value } = event.target\r\n\r\n        if (name == \"Task\") {\r\n            setTask(value)\r\n        } else if (name == \"Description\") {\r\n            setDescription(value)\r\n        } else if (name == \"Status\") {\r\n            setStatus(value)\r\n        } else if (name == \"Date\") {\r\n            setDate(value)\r\n        } else {\r\n            setDeadline(value)\r\n        }\r\n    }\r\n    \r\n    const clickhandler=()=>{\r\n        let object={}\r\n        object[\"Task\"]=Task\r\n        object[\"Description\"]=Description\r\n        object[\"Status\"]=Status\r\n        object[\"Date\"]=Date\r\n        object[\"Deadline\"]=Deadline\r\n        save(object)\r\n     \r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <Modal toggle={toggle} isOpen={modal} >\r\n            <ModalHeader toggle={toggle}>\r\n                Create Task\r\n            </ModalHeader>\r\n            <ModalBody  >\r\n                <form action=\"\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Title</label>\r\n                        <input type=\"text\" className=\"form-control\" value={Task} onChange={ChangeHandler} name=\"Task\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Description</label>\r\n                        <textarea name=\"\" id=\"\" cols=\"30\" rows=\"5\" className=\"form-control\" value={Description} onChange={ChangeHandler} name=\"Description\"  ></textarea>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Status</label>\r\n                        <input type=\"text\" className=\"form-control\" value={Status} onChange={ChangeHandler} name=\"Status\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Creation Date</label>\r\n                        <input type=\"date\" name=\"\" id=\"\" className=\"form-control\" value={Date} onChange={ChangeHandler} name=\"Date\" />\r\n                    </div>\r\n                    <div className=\"form-group\" >\r\n                        <label htmlFor=\"\">Deadline</label>\r\n                        <input type=\"date\" name=\"\" id=\"\" className=\"form-control\" value={Deadline} onChange={ChangeHandler} name=\"Deadline\" />\r\n                    </div>\r\n                </form>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={clickhandler}>\r\n                    Create\r\n                </Button>\r\n                {' '}\r\n                <Button onClick={toggle} >\r\n                    Cancel\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CreateTask\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Modal, ModalFooter, ModalBody, ModalHeader, Button } from 'reactstrap';\r\n\r\n\r\nconst EditTask = ({ modal, toggle, TaskObj, upDateTask }) => {\r\n    const [Task, setTask] = useState(\"\")\r\n    const [Description, setDescription] = useState(\"\")\r\n    const [Status, setStatus] = useState(\"\")\r\n    const [Date, setDate] = useState(\"\")\r\n    const [Deadline, setDeadline] = useState(\"\")\r\n\r\n    const ChangeHandlers = (event) => {\r\n        const { name, value } = event.target\r\n\r\n        if (name == \"Task\") {\r\n            setTask(value)\r\n        } else if (name == \"Description\") {\r\n            setDescription(value)\r\n        } else if (name == \"Status\") {\r\n            setStatus(value)\r\n        } else if (name == \"Date\") {\r\n            setDate(value)\r\n        } else {\r\n            setDeadline(value)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTask(TaskObj.Task)\r\n        setTask(TaskObj.Description)\r\n        setTask(TaskObj.Status)\r\n        setTask(TaskObj.Date)\r\n        setTask(TaskObj.Deadline)\r\n    }, [])\r\n\r\n\r\n    const UpdateHandler = (e) => {\r\n        e.preventDefault();\r\n        let tempobj = {}\r\n        tempobj[\"Task\"] = Task\r\n        tempobj[\"Description\"] = Description\r\n        tempobj[\"Status\"] = Status\r\n        tempobj[\"Date\"] = Date\r\n        tempobj[\"Deadline\"] = Deadline\r\n        upDateTask(tempobj)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Modal toggle={toggle} isOpen={modal} >\r\n            <ModalHeader toggle={toggle}>\r\n                Create Task\r\n            </ModalHeader>\r\n            <ModalBody  >\r\n                <form action=\"\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Update Title</label>\r\n                        <input type=\"text\" className=\"form-control\" value={Task} onChange={ChangeHandlers} name=\"Task\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Update Description</label>\r\n                        <textarea name=\"\" id=\"\" cols=\"30\" rows=\"5\" className=\"form-control\" value={Description} onChange={ChangeHandlers} name=\"Description\"  ></textarea>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Update Status</label>\r\n                        <input type=\"text\" className=\"form-control\" value={Status} onChange={ChangeHandlers} name=\"Status\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Update Creation Date</label>\r\n                        <input type=\"date\" name=\"\" id=\"\" className=\"form-control\" value={Date} onChange={ChangeHandlers} name=\"Date\" />\r\n                    </div>\r\n                    <div className=\"form-group\" >\r\n                        <label htmlFor=\"\"> Update Deadline</label>\r\n                        <input type=\"date\" name=\"\" id=\"\" className=\"form-control\" value={Deadline} onChange={ChangeHandlers} name=\"Deadline\" />\r\n                    </div>\r\n                </form>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={UpdateHandler}>\r\n                    UpDate\r\n                </Button >\r\n                {' '}\r\n                <Button onClick={toggle} >\r\n                    Cancel\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditTask\r\n","import React,{useState} from 'react'\r\nimport EditTask from './EditTask';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst CreateList = ({TaskObj,index,TaskDelete,updateListArray}) => {\r\n    const [modal, setmodal] = useState(false)\r\n\r\n    const toggle=()=>{\r\n        setmodal(!modal)\r\n    }\r\n\r\n    const updateTask=(obj)=>{\r\n        updateListArray(obj,index)\r\n    }\r\n\r\n\r\n    const DeleteTask=()=>{\r\n        TaskDelete(index)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"box\">\r\n                <div className=\"box_content\">\r\n\r\n                    <p>Task:- {TaskObj.Task}</p>\r\n                    <p>Description:- {TaskObj.Description}</p>\r\n                    <p>Status:- {TaskObj.Status}</p>\r\n                    <p>Date:- {TaskObj.Date}</p>\r\n                    <p>Deadline:- {TaskObj.Deadline}</p>\r\n                    <span className=\"icon\" onClick={()=>{\r\n                        setmodal(true)\r\n                    }} ><EditIcon/></span>\r\n                    <span className=\"icon\" onClick={DeleteTask} ><DeleteIcon  /></span>\r\n\r\n                </div>\r\n            </div>\r\n            <EditTask modal={modal} toggle={toggle} upDateTask={updateTask} TaskObj={TaskObj} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateList\r\n","import React, { useEffect, useState } from 'react'\r\nimport CreateTask from './CreateTask';\r\nimport CreateList from './CreateList';\r\n\r\n\r\n\r\nconst TodoTask = () => {\r\n    const [modal, setmodal] = useState(false)\r\n    const [TaskList, setTaskList] = useState([])\r\n\r\n\r\n\r\n    const toggle = () => {\r\n        setmodal(!modal)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let arr = localStorage.getItem(\"TaskList\")\r\n    \r\n        if(arr){\r\n            let obj = JSON.parse(arr)\r\n            setTaskList(obj)\r\n        }\r\n    },[])\r\n\r\n    const saveTask = (object) => {\r\n        let tempfile = TaskList;\r\n        tempfile.push(object)\r\n        localStorage.setItem(\"TaskList\",JSON.stringify(tempfile))\r\n        setTaskList(tempfile)\r\n        setmodal(false)\r\n    }\r\n\r\n    const TaskDelete = (index) => {\r\n        let tempfile = TaskList;\r\n        tempfile.splice(index, 1);\r\n        localStorage.setItem(\"TaskList\",JSON.stringify(tempfile))\r\n        setTaskList(tempfile)\r\n        window.location.reload()\r\n    }\r\n    const updateListArrays=(obj,index)=>{\r\n         let templist=TaskList\r\n         templist[index]=obj\r\n         localStorage.setItem(\"TaskList\",JSON.stringify(templist))\r\n         setTaskList(templist)\r\n         window.location.reload()\r\n         \r\n          \r\n    }\r\n\r\n   \r\n    return (\r\n        <>\r\n            <div className=\"main_container\">\r\n                <div className=\"container\">\r\n\r\n                    <div className=\"box_todo\">\r\n                        <div className=\"box_todo_content\">\r\n                            <h1>Todo List</h1>\r\n                            <input type=\"text\" />\r\n                        </div>\r\n                        <button className=\"btns\" onClick={() => {\r\n                            setmodal(true)\r\n                        }} >\r\n                            Create Task\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"containers\">\r\n                    {\r\n                        TaskList.map((obj,index) => {\r\n                            return (\r\n\r\n                                <CreateList TaskObj={obj} index={index}  TaskDelete={TaskDelete} updateListArray={updateListArrays} />\r\n\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <CreateTask modal={modal} toggle={toggle} save={saveTask} />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoTask\r\n","import React from 'react';\nimport TodoTask from './TodoTask';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nconst App = () => {\n  return (\n    <div>\n      <TodoTask/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />,\n \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}